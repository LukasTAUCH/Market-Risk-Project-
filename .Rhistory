length_portfolio <- length(portfolio$Volume) - 2
for (i in 1:length_portfolio)
{
if(!is.na(portfolio$Volume[i]) == TRUE & portfolio$Volume[i]!=0) ## On met des 0 sur les deux lignes après les volumes pour pouvoir supprimer les NA
{
if(is.na(portfolio$Volume[i+1]) == TRUE) #Boucle pour ne pas renplacer des volumes qui se suivent par des 0
{
portfolio$Volume[i+1] = 0
}
if(is.na(portfolio$Volume[i+2])==TRUE)
{
portfolio$Volume[i+2] = 0
}
}
}
portfolio <- portfolio[!is.na(portfolio$Volume),]
portfolio
portfolio <- read.xlsx("Dataset TD4.xlsx", 1)
colnames(portfolio)<-c("Date","Bid-Ask Spread","Volume","Sign", "Price", "Diff")
str(portfolio)
for(i in 1:length(portfolio$Volume))
{
portfolio$Volume[portfolio$Volume == ""] <- NA
portfolio$Volume <- as.numeric(portfolio$Volume)
}
#portfolio
length_portfolio <- length(portfolio$Volume) - 2
for (i in 1:length_portfolio)
{
if(!is.na(portfolio$Volume[i]) == TRUE & portfolio$Volume[i]!=0) ## On met des 0 sur les deux lignes après les volumes pour pouvoir supprimer les NA
{
if(is.na(portfolio$Volume[i+1]) == TRUE) #Boucle pour ne pas renplacer des volumes qui se suivent par des 0
{
portfolio$Volume[i+1] = 0
}
if(is.na(portfolio$Volume[i+2])==TRUE)
{
portfolio$Volume[i+2] = 0
}
}
}
portfolio <- portfolio[!is.na(portfolio$Volume),]
#portfolio
length_portfolio <- length(portfolio$Volume) - 2
for (i in 1:length_portfolio)
{
if(!is.na(portfolio$Volume[i]) == TRUE & portfolio$Volume[i]!=0) ## On met des 0 sur les deux lignes après les volumes pour pouvoir supprimer les NA
{
if(is.na(portfolio$Volume[i+1]) == TRUE) #Boucle pour ne pas renplacer des volumes qui se suivent par des 0
{
portfolio$Volume[i+1] = 0
}
if(is.na(portfolio$Volume[i+2])==TRUE)
{
portfolio$Volume[i+2] = 0
}
}
}
portfolio <- portfolio[!is.na(portfolio$Volume),]
portfolio
transientimpact <- c()
times <- c()
for (i in 1:(length(portfolio$Volume) - 2))
{
if(portfolio$Volume[i]!=0)
{
TI <- portfolio$Price[i+1]-portfolio$Price[i+2]
transientimpact <- append(ImpactTrans, TI)
times <- append(times, portfolio$Date[i+2]-portfolio$Date[i+1])
}
}
transientimpact <- c()
times <- c()
for (i in 1:(length(portfolio$Volume) - 2))
{
if(portfolio$Volume[i]!=0)
{
TI <- portfolio$Price[i+1]-portfolio$Price[i+2]
transientimpact <- append(transientimpact, TI)
times <- append(times, portfolio$Date[i+2]-portfolio$Date[i+1])
}
}
print(transientimpact)
portfolioClear <- portfolio[portfolio$Volume!=0,]
portfolioClear
portfolio_Volume_know <- portfolio[portfolio$Volume!=0,]
portfolio_Volume_know
portfolio_Volume_know <- portfolio[portfolio$Volume!=0,]
portfolio_Volume_know
Y<- c()
for (i in 1:(length(portfolio_Volume_Know$Volume)-1))
{
Y <- append(Y, transientimpact[i]-(portfolio_Volume_Know$'Bid-Ask Spread'[i]/2)*portfolio_Volume_Know$Sign[i])
}
Y<- c()
for (i in 1:(length(portfolio_Volume_know$Volume)-1))
{
Y <- append(Y, transientimpact[i]-(portfolio_Volume_know$'Bid-Ask Spread'[i]/2)*portfolio_Volume_know$Sign[i])
}
Y
#On calcule X :
X<- c()
for (i in 1:(length(portfolio_Volume_know$Volume)-1))
{
temp <- portfolio_Volume_know$Volume[i]/times[i]
X <- append(X, temp)
}
print(X)
parameters <- lm(Y~X)
summary(parameters)
portfolio_Time <- portfolio_Volume_know
portfolio_Time$Date[1] <- portfolio_Volume_know$Date[1]
for (i in 2:length(portfolio_Volume_know$Date))
{
portfolio_Time$Date[i] <- portfolio_Time$Date[i]-portfolio_Volume_know$Date[i-1]
}
portfolio_Time
returns <- c()
time <- portfolio_Time$Date[1]
for (j in 2: (length(portfolio_Volume_know)-1))
{
if(time < interval)
{
time <- time + portfolio_Time$Date[j]
}
else
{
returns <- append(returns, (portfolio_Time$Price[j+1]/portfolio_Time$Price[j])-1)
time <- portfolio_Time$Date[j]
}
}
time <- portfolio_Time$Date[1]
time
time <- portfolio_Time$Date[1]
time
interval
intervals <- 1/24/60
intervals # represents 1 min in the array
time <- portfolio_Time$Date[1]
time
intervals
returns <- c()
time <- portfolio_Time$Date[1]
for (j in 2: (length(portfolio_Volume_know)-1))
{
if(time < intervals)
{
time <- time + portfolio_Time$Date[j]
}
else
{
returns <- append(returns, (portfolio_Time$Price[j+1]/portfolio_Time$Price[j])-1)
time <- portfolio_Time$Date[j]
}
}
returns
intervals <- 1/24/60
intervals # represents 1 min in the array
portfolio_Time <- portfolio_Volume_know
portfolio_Time$Date[1] <- portfolio_Volume_know$Date[1]
for (i in 2:length(portfolio_Volume_know$Date))
{
portfolio_Time$Date[i] <- portfolio_Time$Date[i]-portfolio_Volume_know$Date[i-1]
}
portfolio_Time
returns <- c()
time <- portfolio_Time$Date[1]
for (j in 2: (length(portfolio_Volume_know)-1))
{
if(time < intervals)
{
time <- time + portfolio_Time$Date[j]
}
else
{
returns <- append(returns, (portfolio_Time$Price[j+1]/portfolio_Time$Price[j])-1)
time <- portfolio_Time$Date[j]
}
}
returns
return <- c()
time <- portfolio_Time$Date[1]
for (j in 2: (length(portfolio_Volume_know)-1))
{
if(time < intervals)
{
time <- time + portfolio_Time$Date[j]
}
else
{
return <- append(return, (portfolio_Time$Price[j+1]/portfolio_Time$Price[j])-1)
time <- portfolio_Time$Date[j]
}
}
return
return <- c()
time <- portfolio_Time$Date[1]
for (j in 2: (length(portfolio_Volume_know$Date)-1))
{
if(time < intervals)
{
time <- time + portfolio_Time$Date[j]
}
else
{
return <- append(return, (portfolio_Time$Price[j+1]/portfolio_Time$Price[j])-1)
time <- portfolio_Time$Date[j]
}
}
return
mean_return <- mean(return)
sum <- 0
for (i in 1:length(return))
{
sum <- sum + (return[i] - mean_return)^2
}
volati <- sum / (length(return)-1)
sqrt(volati)
#test bilatéral
#Calcul de la statistique T sous l'hypothèse H0 : "n = 0"
Tn <- -5.660e-09 / sqrt(volati/length(return))
Tn
sum_error_square <- 0
for (i in length(portfolio_Volume_know$Date)-1)
{
sum_error_square <- sum_error_square + (parameters$residuals[i])^2
}
length(parameters$residuals)
nrow(portfolio_Volume_know)
s2 <- sum_error_square / (length(portfolio_Volume_know)-2)
a3hat <- (sum_error_square/(length(portfolio_Volume_know$Date)-1))/(s2^(3/2))
t <- sqrt((length(portfolio_Volume_know$Date)-1)/6)*a3hat
t
plot(density(parameters$residuals))
xk <- as.vector(rep(0,24))
K <- sqrt(0.01*vol/nrow(portfolioClear))
xk <- as.vector(rep(0,24))
K <- sqrt(0.01*volati/length(portfolio_Volume_know$Volume))
for (i in 1:24)
{
xk[i] <- (sinh(K*(24 - (i - 1/2*1/24)))/sinh(K*24))*100
}
xk
plot(xk)
plot(xk, time)
df2 = read.csv("Dataset-TD5.csv")
df2
knitr::opts_chunk$set(echo = TRUE)
mod1 <- lm(X~X1, df2)
knitr::opts_chunk$set(echo = TRUE)
df = read.csv("Dataset-TD5.csv")
df
df <- transform(df , X.1 = as.numeric(X.1))
df <- transform(df , X.2 = as.numeric(X.2))
df <- transform(df , X.5 = as.numeric(X.5))
df <- transform(df , X.6 = as.numeric(X.6))
df <- transform(df , X.9 = as.numeric(X.9))
df <- transform(df , X.10 = as.numeric(X.10))
df[is.na(df)] <- 0
df
str(df)
X <- c()
X1 <- c()
X2 <- c()
X <- (df$X.1 + df$X.2) / 2
X1 <- (df$X.5 + df$X.6) / 2
X2 <- (df$X.9 + df$X.10) / 2
df2 <- data.frame(X,X1,X2)
df2
# N le pas ici toutes les 15 mins donc cst donc 1
T = 12931
M2 = 0
M22 = 0
M23 = 0
for (i in 4:T)
{
M2 = M2 + abs(X[i] - X[i-1])^2
M22 = M22 + abs(X1[i] - X1[i-1])^2
M23 = M23 + abs(X2[i] - X2[i-1])^2
}
M2 <- M2/T
M22 <- M22/T
M23 <- M23/T
M2
M22
M23
M2Prime = 0
M22Prime = 0
M23Prime = 0
T2 <- T/2
for (i in 4:T2)
{
M2Prime = M2Prime + abs(X[2*i] - X[2*(i-1)])^2
M22Prime = M22Prime + abs(X1[2*i] - X1[2*(i-1)])^2
M23Prime = M23Prime + abs(X2[2*i] - X2[2*(i-1)])^2
}
M2Prime <- (2*M2Prime)/T
M22Prime <- (2*M22Prime)/T
M23Prime <- (2*M23Prime)/T
M2Prime
M22Prime
M23Prime
H1 <- (1/2) * log2(M2Prime/M2)
H2 <- (1/2) * log2(M22Prime/M22)
H3 <- (1/2) * log2(M23Prime/M23)
H1
H2
H3
# Volatilité 15 min
V1 <- sd(X)
V2 <- sd(X1)
V3 <- sd(X2)
V1
V2
V3
# Volatilité 1 heure
V1H <- V1 * 4^H1
V2H <- V2 * 4^H2
V3H <- V3 * 4^H3
V1H
V2H
V3H
# Volatilité 1 Jour
V1J <- V1H * 24^H1
V2J <- V2H * 24^H2
V3J <- V3H * 24^H3
V1J
V2J
V3J
# Volailité 1 an
V1A <- V1J * 252^H1
V2A <- V2J * 252^H2
V3A <- V3J * 252^H3
V1A
V2A
V3A
plot(X)
plot(X1)
plot(X2)
mod1 <- lm(X~X1, df2)
mod2 <- lm(X~X2, df2)
mod3 <- lm(X1~X, df2)
mod4 <- lm(X1~X2, df2)
mod5 <- lm(X2~X, df2)
mod6 <- lm(X2~X1, df2)
mod1
mod2
mod3
mod4
mod5
mod6
library(wavelets)
w <- dwt(X, filter = "haar")
w
plot(w)
#https://stackoverflow.com/questions/10462824/plotting-haar-functions-in-r
#https://stackoverflow.com/questions/19677229/r-haar-wavelet-transform
df2 = read.csv("Dataset-TD5.csv")
df2
df2 = read.csv("Dataset-TD5.csv")
str(df2)
df2 <- transform(df2 , X.1 = as.numeric(X.1))
df2 <- transform(df2 , X.2 = as.numeric(X.2))
df2 <- transform(df2 , X.5 = as.numeric(X.5))
df2 <- transform(df2 , X.6 = as.numeric(X.6))
df2 <- transform(df2 , X.9 = as.numeric(X.9))
df2 <- transform(df2 , X.10 = as.numeric(X.10))
df2[is.na(df2)] <- 0
df2
str(df2)
df2 <- transform(df2 , X.1 = as.numeric(X.1))
df2 <- transform(df2 , X.2 = as.numeric(X.2))
df2 <- transform(df2 , X.5 = as.numeric(X.5))
df2 <- transform(df2 , X.6 = as.numeric(X.6))
df2 <- transform(df2 , X.9 = as.numeric(X.9))
df2 <- transform(df2 , X.10 = as.numeric(X.10))
df2[is.na(df2)] <- 0
str(df2)
X <- c()
X1 <- c()
X2 <- c()
X <- (df2$X.1 + df2$X.2) / 2
X1 <- (df2$X.5 + df2$X.6) / 2
X2 <- (df2$X.9 + df2$X.10) / 2
df3 <- data.frame(X,X1,X2)
df3
# N the step here every 15 minutes so it's 1
T = 12931
M2 = 0
M22 = 0
M23 = 0
for (i in 4:T)
{
M2 = M2 + abs(X[i] - X[i-1])^2
M22 = M22 + abs(X1[i] - X1[i-1])^2
M23 = M23 + abs(X2[i] - X2[i-1])^2
}
M2 <- M2/T
M22 <- M22/T
M23 <- M23/T
M2
M22
M23
M2Prime = 0
M22Prime = 0
M23Prime = 0
T2 <- T/2
for (i in 4:T2)
{
M2Prime = M2Prime + abs(X[2*i] - X[2*(i-1)])^2
M22Prime = M22Prime + abs(X1[2*i] - X1[2*(i-1)])^2
M23Prime = M23Prime + abs(X2[2*i] - X2[2*(i-1)])^2
}
M2Prime <- (2*M2Prime)/T
M22Prime <- (2*M22Prime)/T
M23Prime <- (2*M23Prime)/T
M2Prime
M22Prime
M23Prime
H1 <- (1/2) * log2(M2Prime/M2)
H2 <- (1/2) * log2(M22Prime/M22)
H3 <- (1/2) * log2(M23Prime/M23)
H1
H2
H3
# Volatilité 15 min
V1 <- sd(X)
V2 <- sd(X1)
V3 <- sd(X2)
V1
V2
V3
# Volatilité 1 heure
V1H <- V1 * 4^H1
V2H <- V2 * 4^H2
V3H <- V3 * 4^H3
V1H
V2H
V3H
# Volatilité 1 Jour
V1J <- V1H * 24^H1
V2J <- V2H * 24^H2
V3J <- V3H * 24^H3
V1J
V2J
V3J
# Volailité 1 an
V1A <- V1J * 252^H1
V2A <- V2J * 252^H2
V3A <- V3J * 252^H3
V1A
V2A
V3A
plot(X)
plot(X1)
plot(X2)
# Volatility 15 min
V1 <- sd(X)
V2 <- sd(X1)
V3 <- sd(X2)
print(paste("Volatility at 15 min for GBPEUR:", V1))
print(paste("Volatility at 15 min for SEKEUR:", V2))
print(paste("Volatility at 15 min for CADEUR:", V3))
# Volatility 1 heure
V1H <- V1 * 4^H1
V2H <- V2 * 4^H2
V3H <- V3 * 4^H3
V1H
V2H
V3H
# Volatility 1 Jour
V1J <- V1H * 24^H1
V2J <- V2H * 24^H2
V3J <- V3H * 24^H3
V1J
V2J
V3J
# Volaility 1 an
V1A <- V1J * 252^H1
V2A <- V2J * 252^H2
V3A <- V3J * 252^H3
V1A
V2A
V3A
# Volatility 15 min
V1 <- sd(X)
V2 <- sd(X1)
V3 <- sd(X2)
print(paste("Volatility at 15 min for GBPEUR:", V1))
print(paste("Volatility at 15 min for SEKEUR:", V2))
print(paste("Volatility at 15 min for CADEUR:", V3))
# Volatility 1 hour
V1H <- V1 * 4^H1
V2H <- V2 * 4^H2
V3H <- V3 * 4^H3
print(paste("Volatility at 1 hour for GBPEUR:", V1H))
print(paste("Volatility at 1 hour for SEKEUR:", V2H))
print(paste("Volatility at 1 hour for CADEUR:", V3H))
# Volatility 1 day
V1J <- V1H * 24^H1
V2J <- V2H * 24^H2
V3J <- V3H * 24^H3
print(paste("Volatility at 1 day for GBPEUR:", V1J))
print(paste("Volatility at 1 day for SEKEUR:", V2J))
print(paste("Volatility at 1 day for CADEUR:", V3J))
# Volatility 1 year
V1A <- V1J * 252^H1
V2A <- V2J * 252^H2
V3A <- V3J * 252^H3
print(paste("Volatility at 1 year for GBPEUR:", V1A))
print(paste("Volatility at 1 year for SEKEUR:", V2A))
print(paste("Volatility at 1 year for CADEUR:", V3A))
